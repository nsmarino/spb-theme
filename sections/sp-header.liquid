<!-- <link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'"> -->
<!-- <noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript> -->
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>
</svg>

<{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %} class="header-wrapper">
  <header class="sp-header">
    <a href="/" class="sp-header-logo"><img src='https://cdn.shopify.com/s/files/1/0583/3202/0894/files/Group_127logo.png?v=1627426236' alt="Sweet Pickle Books"></a>
    <a href="/pages/about">About</a>
    <a href="/collections/all">Shop</a>
    <a href="/pages/contact">Request a Book</a>
    <a href="/pages/pre-order">Pre-Order</a>
    <a href="/blogs/news">Blog</a>
    <form action="{{ routes.search_url }}" class="sp-header-search" method="get" role="search">
      <div class="field">
        <input type="search" name="q" value="{{ search.terms | escape }}" placeholder="{{ 'general.search.search' | t }}">
        <input type="hidden" name="options[prefix]" value="last">
        <button aria-label="search">
          <svg aria-hidden="true" focusable="false" role="presentation">
            <use href="#icon-search">
          </svg>
        </button>
      </div>
    </form> 
      <!-- Cart icon -->
      <a href="{{ routes.cart_url }}" class="sp-cart-icon">
        <img src="https://cdn.shopify.com/s/files/1/0583/3202/0894/files/sp-cart-icon.svg?v=1627427016" alt="cart">
      </a>
    </div>
  </header>
</{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %}>

<style>
  .sp-header {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    border-bottom: 1px solid var(--main-color);
    padding: 1rem;
  }
  .sp-header-logo {
    width: 250px;
    display: flex;
    align-items: center;
  }
  .sp-header a img {
    width: 100%;
  }
  .sp-header a {
    font-family: Georgia, 'Times New Roman', Times, serif;
    text-decoration: none;
    font-size: var(--font-size-m);
    font-style: italic;
    color: var(--main-color);
  }
  .sp-cart-icon {
    width: 50px;
  }
  .sp-header-search {
    width: 200px;
    height: 50px;
    border: 1px solid var(--main-color);
    border-radius: 10px;
  }
  .sp-header-search .field {
    width: 100%;
    display: flex;
    border: none;
    height: 100%;
    background-color: none;
  }
  ::placeholder {
  color: var(--main-color);
  font-family: var(--serif);
  font-style: italic;
  font-size: var(--font-size-m);
  } 
  .sp-header-search .field input {
    width: 100%;
    height: 100%;
    border: none;
    color: var(--main-color);
    background-color: none;
    border-radius: 10px;
    padding-left: 10px;
  }
  .sp-header-search .field button {
    width: 20%;
    height: 100%;
    border: none;
    background-color: none;
    background: none;
    border-radius: 10px;
  }
  .sp-header-search .field svg {
    width: 25px;
    height: 100%;
    color: var(--main-color);
  }
</style>

{%- if request.page_type != 'cart' -%}
  <!-- {%- render 'cart-notification' -%} -->
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;

      this.onScrollHandler = this.onScroll.bind(this);

      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.reveal.bind(this));
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('details-disclosure');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = shop.url | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ shop.url | append: page.url | json }}
    }
  </script>
{%- endif -%}
